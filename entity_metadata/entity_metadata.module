<?php
// $Id$

/**
 * @file
 * Module file for the deprecated entity metadata module. It contains only
 * deprecated functions, which are there to ease upgrading to the entity.module.
 *
 * Modules should make use of the new functions only, as the deprecated
 * functions will be removed in the near future.
 *
 * @todo: Rename entity_metadata_no_hook_node_access() once this module is
 * removed.
 */

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_get_info($entity_type = NULL) {
  return entity_get_property_info($entity_type);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_get_properties($entity_type = NULL) {
  return entity_get_all_property_info($entity_type);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_info_cache_clear() {
  entity_property_info_cache_clear();
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_list_extract_type($type) {
  return entity_property_list_extract_type($type);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_entity_access($op, $entity_type, $entity = NULL, $account = NULL) {
  return entity_access($op, $entity_type, $entity, $account);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_entity_type_supports($entity_type, $op) {
  return entity_type_supports($entity_type, $op);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_entity_save($entity_type, &$entity) {
  return entity_save($entity_type, $entity);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 *
 * @see entity_metadata_module_implements_alter()
 */
function entity_metadata_entity_delete($entity_type, $id) {
  return entity_delete($entity_type, $id);
}

/**
 * Implements hook_module_implements_alter().
 *
 * Avoid an undesired implementations of hook_entity_delete() and
 * hook_entity_view().
 */
function entity_metadata_module_implements_alter(&$implementations, $hook) {
  if ($hook == 'entity_delete' || $hook == 'entity_view') {
    unset($implementations['entity_metadata']);
  }
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use
 * entity_property_values_create_entity() or just entity_create().
 *
 * @return EntityDrupalWrapper
 *   An EntityDrupalWrapper wrapping the newly created entity or FALSE, if
 *   there were no information how to create the entity.
 */
function entity_metadata_entity_create($entity_type, $values = array()) {
  if (entity_metadata_entity_type_supports($entity_type, 'create')) {
    return entity_property_values_create_entity($entity_type, $values);
  }
  return FALSE;
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_entity_view($entity_type, $entities, $view_mode = 'full', $langcode = NULL) {
  return entity_view($entity_type, $entities, $view_mode, $langcode);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_entity_query($entity_type, $property, $value, $limit = 30) {
  return entity_property_query($entity_type, $property, $value, $limit);
}

/**
 * Deprecated, but still here to ease upgrading.
 * Do not make use of this function, instead use the new one.
 */
function entity_metadata_verify_data_type($data, $type) {
  return entity_property_verify_data_type($data, $type);
}
